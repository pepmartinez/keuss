"use strict";(self.webpackChunkkeuss_docusaurus=self.webpackChunkkeuss_docusaurus||[]).push([[858],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(a),m=i,k=d["".concat(s,".").concat(m)]||d[m]||c[m]||r;return a?n.createElement(k,l(l({ref:t},p),{},{components:a})):n.createElement(k,l({ref:t},p))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var u=2;u<r;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6676:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var n=a(7462),i=a(3366),r=(a(7294),a(3905)),l=["components"],o={id:"factory",title:"Factory API",sidebar_label:"Factory"},s=void 0,u={unversionedId:"api/factory",id:"api/factory",isDocsHomePage:!1,title:"Factory API",description:"Backends, which work as queue factories, have the following operations:",source:"@site/docs/api/factory.md",sourceDirName:"api",slug:"/api/factory",permalink:"/keuss/docs/api/factory",editUrl:"https://github.com/pepmartinez/keuss/edit/master/website/docs/api/factory.md",tags:[],version:"current",frontMatter:{id:"factory",title:"Factory API",sidebar_label:"Factory"},sidebar:"someSidebar",previous:{title:"Examples",permalink:"/keuss/docs/usage/pipelines/examples"},next:{title:"Signaller",permalink:"/keuss/docs/api/signal"}},p=[{value:"<code>MQ</code>: Factory initialization",id:"mq-factory-initialization",children:[{value:"MongoDB defaults",id:"mongodb-defaults",children:[],level:3},{value:"Dead Letter",id:"dead-letter",children:[],level:3}],level:2},{value:"<code>queue</code>: Queue creation",id:"queue-queue-creation",children:[],level:2},{value:"<code>close</code>: Factory close",id:"close-factory-close",children:[],level:2}],c={toc:p};function d(e){var t=e.components,a=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Backends, which work as queue factories, have the following operations:"),(0,r.kt)("h2",{id:"mq-factory-initialization"},(0,r.kt)("inlineCode",{parentName:"h2"},"MQ"),": Factory initialization"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"var QM = require ('keuss/backends/<backend>');\n\nMQ (opts, (err, factory) => {\n  // factory contains the actual factory, initialized\n})\n")),(0,r.kt)("p",null,"where ",(0,r.kt)("inlineCode",{parentName:"p"},"opts")," is an object containing initialization options. Common properties to all backends are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),": Name for the factory, defaults to 'N'."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stats"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"provider"),": stats backend to use, as result of ",(0,r.kt)("inlineCode",{parentName:"li"},"require ('keuss/stats/<provider>')"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"require ('keuss/stats/mem')"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"opts"),": options for the provider."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"signaller"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"provider"),": signaller provider to use, as result of ",(0,r.kt)("inlineCode",{parentName:"li"},"require ('keuss/signal/<provider>')"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"require ('keuss/signal/local')"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"opts"),": options for the provider."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"deadletter"),": deadletter options, described below.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"max_ko"),": max rollbacks per element."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"queue"),": deadletter queue name.")))),(0,r.kt)("p",null,"The following are backend-dependent values:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"backends ",(0,r.kt)("em",{parentName:"li"},"mongo"),", ",(0,r.kt)("em",{parentName:"li"},"pl-mongo")," and ",(0,r.kt)("em",{parentName:"li"},"ps-mongo"),".",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"url"),": mongodb url to use, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"mongodb://localhost:27017/keuss"),"."))),(0,r.kt)("li",{parentName:"ul"},"backends ",(0,r.kt)("em",{parentName:"li"},"redis-list")," and ",(0,r.kt)("em",{parentName:"li"},"redis-oq"),".",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"redis"),": data to create a redis connection to the Redis acting as backend, see below."))),(0,r.kt)("li",{parentName:"ul"},"backend ",(0,r.kt)("em",{parentName:"li"},"ps-mongo"),".",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ttl"),": time to keep consumed elements in the collection after being removed. Defauls to 3600 secs.")))),(0,r.kt)("h3",{id:"mongodb-defaults"},"MongoDB defaults"),(0,r.kt)("p",null,"On MongoDB-based backends, ",(0,r.kt)("inlineCode",{parentName:"p"},"signaller")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"stats")," defaults to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"signaller"),": uses ",(0,r.kt)("inlineCode",{parentName:"li"},"mongo-capped"),", using the same mongodb url than the backend, but postfixing the db with ",(0,r.kt)("inlineCode",{parentName:"li"},"_signal"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stats"),": uses ",(0,r.kt)("inlineCode",{parentName:"li"},"mongo-capped"),", using the same mongodb url than the backend, but postfixing the db with ",(0,r.kt)("inlineCode",{parentName:"li"},"_stats"),".\nThis alows cleaner and more concise initialization, using a sane default.")),(0,r.kt)("h3",{id:"dead-letter"},"Dead Letter"),(0,r.kt)("p",null,"The concept of ",(0,r.kt)("em",{parentName:"p"},"deadletter")," is very common on queue middlewares: in case reserve/commit/rollback is used to consume, a maximum number of fails (reserve-rollback) can be set on each element; if an element sees more rollbacks than allowed, the element is moved to an special queue (dead letter queue) for later, offline inspection."),(0,r.kt)("p",null,"By default, keuss uses no deadletter queue; it can be activated by passing a ",(0,r.kt)("inlineCode",{parentName:"p"},"deadletter")," object at the time of factory creation, in the options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"var factory_opts = {\n  url: 'mongodb://localhost/qeus',\n  deadletter: {\n    max_ko: 3\n  }\n};\n\n// initialize factory\nMQ(factory_opts, (err, factory) => {\n  ...\n")),(0,r.kt)("p",null,"This object must not be empty, and can contain the following keys:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"max_ko"),": maximum number of rollbacks per element allowed. The next rollback will cause the element to be moved to the deadletter queue. Defaults to 0, which means ",(0,r.kt)("inlineCode",{parentName:"li"},"infinite"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"queue"),": queue name of the deadletter queue, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"__deadletter__"),".")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"All storage backends support deadletter. In ",(0,r.kt)("inlineCode",{parentName:"p"},"ps-mongo")," the move-to-deadletter (as it is the case with other move-to-queue operations) is atomic; in the rest, the element is first committed in the original queue and then pushed inside deadletter."))),(0,r.kt)("h2",{id:"queue-queue-creation"},(0,r.kt)("inlineCode",{parentName:"h2"},"queue"),": Queue creation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// factory has been initialized\nvar q = factory.queue (<name>, <options>);\n")),(0,r.kt)("p",null,"Where:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),": string to be used as queue name. Queues with the same name are in fact the same queue if they're backed in the same factory type using the same initialization data (mongodb url or redis conn-data)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),": the options passed at backend initialization are used as default values:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"pollInterval: rearm or poll period in millisecs for get operations, defaults to 15000 (see ",(0,r.kt)("a",{parentName:"li",href:"../usage/no-signaller"},"Working with no signallers"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"signaller"),": signaller to use for the queue.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"provider"),": signaller factory."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"opts"),": options for the signaller factory (see ",(0,r.kt)("a",{parentName:"li",href:"signal"},"Signaler"),")."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stats"),": stats store to use for this queue.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"provider"),": stats factory."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"opts"),": options for the stats factory (see below).")))))),(0,r.kt)("h2",{id:"close-factory-close"},(0,r.kt)("inlineCode",{parentName:"h2"},"close"),": Factory close"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"factory.close (err => {...});\n")),(0,r.kt)("p",null,"Frees up resources on the factory. Queues created with the factory will become unusable afterwards. See ",(0,r.kt)("a",{parentName:"p",href:"/keuss/docs/usage/shutdown"},"'Shutdown process'")," for more info."))}d.isMDXComponent=!0}}]);